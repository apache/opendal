# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Weekly OpenDAL Update

on:
  schedule:
    # Runs at 00:00 UTC every Sunday
    - cron: "0 0 * * 0"
  workflow_dispatch: # This allows manual triggering of the workflow

permissions:
  pull-requests: write
  discussions: write
  contents: write

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install UV
        run: |
          pip install ruff

      - name: Install dependencies with UV
        working-directory: .github/scripts/weekly_update
        run: |
          uv pip install --system -e .

      - name: Setup 1Password Connect
        if: runner.os == 'Linux'
        uses: 1password/load-secrets-action/configure@v1
        with:
          connect-host: ${{ secrets.OP_CONNECT_HOST }}
          connect-token: ${{ secrets.OP_CONNECT_TOKEN }}

      - name: Setup
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OPENAI_API_BASE: op://services/openai/api_base
          OPENAI_API_KEY: op://services/openai/api_key
          OPENAI_MODEL: op://services/openai/model

      - name: Generate weekly update
        working-directory: .github/scripts/weekly_update
        id: generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run your Python script and save the output to a file
          python main.py apache/opendal --output weekly_update.md

          # Set the date in the format "Month Day, Year"
          TITLE_DATE=$(date +"%B %d, %Y")
          echo "TITLE_DATE=$TITLE_DATE" >> $GITHUB_ENV

      - name: Create GitHub Discussion
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/discussions \
            -f title="${{ env.TITLE_DATE }}: This week in OpenDAL" \
            -f body="$(cat .github/scripts/weekly_update/weekly_update.md)" \
            -f category_id="$(gh api /repos/${{ github.repository }}/discussions/categories | jq '.[] | select(.name=="General") | .id')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
