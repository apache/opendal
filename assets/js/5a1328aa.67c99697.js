"use strict";(self.webpackChunkopendal_website=self.webpackChunkopendal_website||[]).push([[5165],{383:(e,t,n)=>{n.d(t,{A:()=>o});var s=n(6672),r=n(3420);function o({children:e,owner:t="apache",repo:n="opendal",branch:o="main",basePath:a="",components:i={}}){const c=e=>{const s=e.replace(/^\.\//,"");return`https://github.com/${t}/${n}/blob/${o}/${a}${s}`},l={...i,a:e=>{const{href:t,...n}=e;return t&&t.startsWith("./")?(0,r.jsx)("a",{...n,href:c(t)}):(0,r.jsx)("a",{...e})},p:e=>{const{children:t}=e;if("string"==typeof t){const e=/\[(.*?)\]:\s*(\.\/[^\s]+)/g;if(e.test(t)){const n=t.replace(e,(e,t,n)=>`[${t}]: ${c(n)}`);return(0,r.jsx)("p",{children:n})}}return(0,r.jsx)("p",{...e})}};return"string"==typeof e?(e=>{if("string"!=typeof e)return e;let t=e.replace(/\[(.*?)\]\((\.\/[^)]+)\)/g,(e,t,n)=>`[${t}](${c(n)})`);return t=t.replace(/\[(.*?)\]:\s*(\.\/[^\s]+)/g,(e,t,n)=>`[${t}]: ${c(n)}`),t})(e):s.isValidElement(e)?s.cloneElement(e,{components:{...e.props.components||{},...l}}):e}},2598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>j,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"integrations/object_store","title":"Object Store","description":"","source":"@site/docs/30-integrations/object_store.mdx","sourceDirName":"30-integrations","slug":"/integrations/object_store","permalink":"/integrations/object_store","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/opendal/tree/main/website/docs/30-integrations/object_store.mdx","tags":[],"version":"current","lastUpdatedBy":"Xuanwo","lastUpdatedAt":1741601725000,"frontMatter":{"title":"Object Store"},"sidebar":"docs","previous":{"title":"Fuse3","permalink":"/integrations/fuse3"},"next":{"title":"Parquet","permalink":"/integrations/parquet"}}');var r=n(3420),o=n(7251),a=n(383);function i(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apache-opendal-object_store-integration",children:"Apache OpenDAL\u2122 object_store integration"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://github.com/apache/opendal/actions?query=branch%3Amain",children:(0,r.jsx)(t.img,{src:"/img/external/22edcdd5dfe4e195b43abf21ba698610.svg",alt:"Build Status"})})," ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/object_store_opendal",children:(0,r.jsx)(t.img,{src:"/img/external/569427d642e3d231c42ddf479509d1ad.svg",alt:"Latest Version"})})," ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/object_store_opendal",children:(0,r.jsx)(t.img,{src:"/img/external/7ccca72503e4823887f7fb9cb2d40b88.svg",alt:"Crate Downloads"})})," ",(0,r.jsx)(t.a,{href:"https://opendal.apache.org/discord",children:(0,r.jsx)(t.img,{src:"/img/external/6564632a3de5ae36e76129dad4c34d7c.svg",alt:"chat"})})]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"object_store_opendal"})," is an ",(0,r.jsx)(t.a,{href:"https://crates.io/crates/object_store",children:(0,r.jsx)(t.code,{children:"object_store"})})," implementation using ",(0,r.jsx)(t.a,{href:"https://github.com/apache/opendal",children:(0,r.jsx)(t.code,{children:"opendal"})}),"."]}),"\n",(0,r.jsx)(t.p,{children:"This crate can help you to access 30 more storage services with the same object_store API."}),"\n",(0,r.jsx)(t.h2,{id:"useful-links",children:"Useful Links"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Documentation: ",(0,r.jsx)(t.a,{href:"https://docs.rs/object_store_opendal/",children:"release"})," | ",(0,r.jsx)(t.a,{href:"https://opendal.apache.org/docs/object-store-opendal/object_store_opendal/",children:"dev"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"opendal_store_opendal"})," depends on the ",(0,r.jsx)(t.code,{children:"opendal"})," crate. Please make sure to always use the latest versions of both."]}),"\n",(0,r.jsxs)(t.p,{children:["latest ",(0,r.jsx)(t.code,{children:"object_store_opendal"})," ",(0,r.jsx)(t.img,{src:"/img/external/569427d642e3d231c42ddf479509d1ad.svg",alt:"Crate"})]}),"\n",(0,r.jsxs)(t.p,{children:["latest ",(0,r.jsx)(t.code,{children:"opendal"})," ",(0,r.jsx)(t.img,{src:"/img/external/588af842932c40a78cc2afe70ce679e1.svg",alt:"Crate"})]}),"\n",(0,r.jsxs)(t.h3,{id:"1-using-object_store-api-to-access-s3",children:["1. using ",(0,r.jsx)(t.code,{children:"object_store"})," API to access S3"]}),"\n",(0,r.jsxs)(t.p,{children:["Add the following dependencies to your ",(0,r.jsx)(t.code,{children:"Cargo.toml"})," with correct version:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-toml",children:'[dependencies]\nobject_store = "0.11.0"\nobject_store_opendal =  "xxx"   # see the latest version above\nopendal = { version = "xxx", features = ["services-s3"] }  # see the latest version above\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Build ",(0,r.jsx)(t.code,{children:"OpendalStore"})," via ",(0,r.jsx)(t.code,{children:"opendal::Operator"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:'use std::sync::Arc;\n\nuse bytes::Bytes;\nuse object_store::path::Path;\nuse object_store::ObjectStore;\nuse object_store_opendal::OpendalStore;\nuse opendal::services::S3;\nuse opendal::{Builder, Operator};\n\n#[tokio::main]\nasync fn main() {\n    let builder = S3::from_map(\n        vec![\n            ("access_key".to_string(), "my_access_key".to_string()),\n            ("secret_key".to_string(), "my_secret_key".to_string()),\n            ("endpoint".to_string(), "my_endpoint".to_string()),\n            ("region".to_string(), "my_region".to_string()),\n        ]\n        .into_iter()\n        .collect(),\n    ).unwrap();\n\n    // Create a new operator\n    let operator = Operator::new(builder).unwrap().finish();\n\n    // Create a new object store\n    let object_store = Arc::new(OpendalStore::new(operator));\n\n    let path = Path::from("data/nested/test.txt");\n    let bytes = Bytes::from_static(b"hello, world! I am nested.");\n\n    object_store.put(&path, bytes.clone().into()).await.unwrap();\n\n    let content = object_store\n        .get(&path)\n        .await\n        .unwrap()\n        .bytes()\n        .await\n        .unwrap();\n\n    assert_eq!(content, bytes);\n}\n'})}),"\n",(0,r.jsx)(t.h3,{id:"2-querying-data-in-a-s3-bucket-using-datafusion",children:"2. querying data in a S3 bucket using DataFusion"}),"\n",(0,r.jsxs)(t.p,{children:["Add the following dependencies to your ",(0,r.jsx)(t.code,{children:"Cargo.toml"})," with correct version:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-toml",children:'[dependencies]\nobject_store = "0.11.0"\nobject_store_opendal = "xxx" # see the latest version above\nopendal = { version = "xxx", features = ["services-s3"] } # see the latest version above\ndatafusion = "44.0.0"\nurl = "2.5.2"\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Build ",(0,r.jsx)(t.code,{children:"OpendalStore"})," via ",(0,r.jsx)(t.code,{children:"opendal::Operator"})," and register it to ",(0,r.jsx)(t.code,{children:"DataFusion"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:'use datafusion::error::DataFusionError;\nuse datafusion::error::Result;\nuse datafusion::prelude::*;\nuse opendal::services::S3;\nuse opendal::Operator;\nuse std::sync::Arc;\nuse url::Url;\n\n\n#[tokio::main]\nasync fn main() -> Result<()> {\n    let ctx = SessionContext::new();\n\n    // Configure OpenDAL for S3\n    let region = "my_region";\n    let bucket_name = "my_bucket";\n    let builder = S3::default()\n        .endpoint("my_endpoint")\n        .bucket(bucket_name)\n        .region(region)\n        .access_key_id("my_access_key")\n        .secret_access_key("my_secret_key");\n    let op = Operator::new(builder)\n        .map_err(|err| DataFusionError::External(Box::new(err)))?\n        .finish();\n    let store = object_store_opendal::OpendalStore::new(op);\n\n    // Register the object store\n    let path = format!("s3://{bucket_name}");\n    let s3_url = Url::parse(&path).unwrap();\n    ctx.register_object_store(&s3_url, Arc::new(store));\n\n    // Register CSV file as a table\n    let path = format!("s3://{bucket_name}/csv/data.csv");\n    ctx.register_csv("trips", &path, CsvReadOptions::default())\n        .await?;\n\n    // Execute the query\n    let df = ctx.sql("SELECT * FROM trips LIMIT 10").await?;\n    // Print the results\n    df.show().await?;\n\n    // Dynamic query using the file path directly\n    let ctx = ctx.enable_url_table();\n    let df = ctx\n        .sql(format!(r#"SELECT * FROM \'{}\' LIMIT 10"#, &path).as_str())\n        .await?;\n    // Print the results\n    df.show().await?;\n\n    Ok(())\n}\n'})}),"\n",(0,r.jsx)(t.h2,{id:"wasm-support",children:"WASM support"}),"\n",(0,r.jsxs)(t.p,{children:["To build with ",(0,r.jsx)(t.code,{children:"wasm32-unknown-unknown"})," target, you need to enable the ",(0,r.jsx)(t.code,{children:"send_wrapper"})," feature:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"cargo build --target wasm32-unknown-unknown --features send_wrapper\n"})}),"\n",(0,r.jsx)(t.h2,{id:"branding",children:"Branding"}),"\n",(0,r.jsxs)(t.p,{children:["The first and most prominent mentions must use the full form: ",(0,r.jsx)(t.strong,{children:"Apache OpenDAL\u2122"})," of the name for any individual usage (webpage, handout, slides, etc.) Depending on the context and writing style, you should use the full form of the name sufficiently often to ensure that readers clearly understand the association of both the OpenDAL project and the OpenDAL software product to the ASF as the parent organization."]}),"\n",(0,r.jsxs)(t.p,{children:["For more details, see the ",(0,r.jsx)(t.a,{href:"https://www.apache.org/foundation/marks/guide",children:"Apache Product Name Usage Guide"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"license-and-trademarks",children:"License and Trademarks"}),"\n",(0,r.jsxs)(t.p,{children:["Licensed under the Apache License, Version 2.0: ",(0,r.jsx)(t.a,{href:"http://www.apache.org/licenses/LICENSE-2.0",children:"http://www.apache.org/licenses/LICENSE-2.0"})]}),"\n",(0,r.jsx)(t.p,{children:"Apache OpenDAL, OpenDAL, and Apache are either registered trademarks or trademarks of the Apache Software Foundation."})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}const l={title:"Object Store"},d=void 0,p={},h=[{value:"Useful Links",id:"useful-links",level:2},{value:"Examples",id:"examples",level:2},{value:"1. using <code>object_store</code> API to access S3",id:"1-using-object_store-api-to-access-s3",level:3},{value:"2. querying data in a S3 bucket using DataFusion",id:"2-querying-data-in-a-s3-bucket-using-datafusion",level:3},{value:"WASM support",id:"wasm-support",level:2},{value:"Branding",id:"branding",level:2},{value:"License and Trademarks",id:"license-and-trademarks",level:2}];function u(e){return(0,r.jsx)(a.A,{basePath:"integrations/object_store/",children:(0,r.jsx)(c,{components:{h1:"h2"}})})}function j(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u()}},7251:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(6672);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);