"use strict";(globalThis.webpackChunkopendal_website=globalThis.webpackChunkopendal_website||[]).push([[8203],{318:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"bindings/ruby","title":"Ruby","description":"","source":"@site/docs/20-bindings/ruby.mdx","sourceDirName":"20-bindings","slug":"/bindings/ruby","permalink":"/bindings/ruby","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/opendal/tree/main/website/docs/20-bindings/ruby.mdx","tags":[],"version":"current","lastUpdatedBy":"Erick Guan","lastUpdatedAt":1759298065000,"frontMatter":{"title":"Ruby"},"sidebar":"docs","previous":{"title":"Python","permalink":"/bindings/python"},"next":{"title":"Swift \ud83d\udea7","permalink":"/bindings/swift"}}');var i=s(7259),r=s(9087),l=s(8131);function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"apache-opendal-ruby-binding",children:"Apache OpenDAL\u2122 Ruby Binding"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://rubygems.org/gems/opendal",children:(0,i.jsx)(n.img,{src:"/img/external/543c994a056a0d48f83ab1ea91f6ee77.svg",alt:"Gem Version"})}),"\n",(0,i.jsx)(n.a,{href:"https://rubygems.org/gems/opendal",children:(0,i.jsx)(n.img,{src:"/img/external/c4d62baef0803d759df7a2ff252188c0.svg",alt:"Gem Downloads (for latest version)"})})]}),"\n",(0,i.jsxs)(n.p,{children:["OpenDAL's Ruby ",(0,i.jsx)(n.a,{href:"https://rubygems.org/gems/opendal",children:"gem"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/apache/opendal/assets/5351546/87bbf6e5-f19e-449a-b368-3e283016c887",alt:""})}),"\n",(0,i.jsxs)(n.p,{children:["Read OpenDAL's ",(0,i.jsx)(n.a,{href:"https://opendal.apache.org/docs/ruby/",children:"ruby"})," documentation."]}),"\n",(0,i.jsxs)(n.p,{children:["You can find Rust documentation ",(0,i.jsx)(n.a,{href:"https://docs.rs/opendal/latest/opendal/index.html",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"get-started",children:"Get started"}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:"Install gem:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"bundle add opendal\n"})}),"\n",(0,i.jsx)(n.p,{children:"or add it in Gemfile:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"# Gemfile\n\nsource \"https://rubygems.org\"\n\ngem 'opendal'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h4,{id:"file-operations-with-an-in-memory-storage",children:"File operations with an in-memory storage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require \'opendal\'\n\nop = OpenDal::Operator.new("memory", {})\nop.write("file", "hello world")\nputs op.read("file") # => "hello world"\nputs ""\n\nputs "List:", op.list("").map { |e| e.path }\nputs ""\n\nputs "Stat"\nputs op.stat("file").inspect # => #<OpenDal::Metadata mode: File,         content_type: ,         content_length: 11>\nputs ""\n\nputs "Deleting \'file\'"\nop.delete("/file")\nputs ""\n\nputs "Exist?", op.exist?("/file") # => false\nputs ""\n\nputs "Info:", op.info.inspect # => #<OpenDal::OperatorInfo scheme: "memory", root: "/">\n'})}),"\n",(0,i.jsx)(n.h4,{id:"a-s3-operator",children:"A S3 operator"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require \'opendal\'\n\nop = OpenDal::Operator.new("s3", {\n  "endpoint" => "http://localhost:9000",\n  "access_key_id" => "minioadmin" ,\n  "secret_access_key" => "minioadmin",\n  "bucket" => "test",\n  "region" => "us-east-1",\n})\nop.write("file", "hello world")\nputs op.read("file") # => "hello world"\nputs ""\n\nputs "List:", op.list("").map { |e| e.path }\nputs ""\n\nputs "Stat"\nputs op.stat("file").inspect # => #<OpenDal::Metadata mode: File,         content_type: binary/octet-stream,         content_length: 11>\nputs ""\n\nputs "Deleting \'file\'"\nop.delete("file")\nputs ""\n\nputs "Exist?", op.exist?("file") # => false\nputs ""\n\nputs "Info:", op.info.inspect # => #<OpenDal::OperatorInfo scheme: "s3", root: "/">\n'})}),"\n",(0,i.jsx)(n.h4,{id:"use-middleware",children:"Use middleware"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require \'opendal\'\n\nop = OpenDal::Operator.new("s3", {\n  "endpoint" => "http://localhost:9000",\n  "access_key_id" => "minioadmin" ,\n  "secret_access_key" => "minioadmin",\n  "bucket" => "test",\n  "region" => "us-east-1",\n})\n\nop.middleware(OpenDal::Middleware::ConcurrentLimit.new(5))\nop.middleware(OpenDal::Middleware::Retry.new)\nop.middleware(OpenDal::Middleware::Timeout.new(1, 2))\n\nop.list("/").map do |e|\n  puts e.inspect\nend\n'})}),"\n",(0,i.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsx)(n.p,{children:"More detailed documentation is a work in progress."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["OpenDAL's ",(0,i.jsx)(n.a,{href:"https://opendal.apache.org/docs/ruby/",children:"ruby"})," documentation"]}),"\n",(0,i.jsxs)(n.li,{children:["Rust ",(0,i.jsx)(n.a,{href:"https://docs.rs/opendal/latest/opendal/index.html",children:"documentation"})]}),"\n",(0,i.jsxs)(n.li,{children:["Rust documentation for ",(0,i.jsx)(n.a,{href:"https://docs.rs/opendal/latest/opendal/services/index.html",children:"services"})]}),"\n",(0,i.jsxs)(n.li,{children:["Rust documentation for ",(0,i.jsx)(n.a,{href:"https://docs.rs/opendal/latest/opendal/layers/index.html",children:"layers"})," (middlewares in Ruby)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsx)(n.p,{children:"Install gem and its dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"bundle\n"})}),"\n",(0,i.jsx)(n.p,{children:"Build bindings:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"bundle exec rake compile\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run tests:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"bundle exec rake test\n"})}),"\n",(0,i.jsx)(n.p,{children:"Run linters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"bundle exec rake standard:fix\nrustfmt --config-path ../../rustfmt.toml src/*.rs # Run rustfmt for Rust files\ncargo clippy --fix --all-targets # Run rust linter clippy\n"})}),"\n",(0,i.jsx)(n.h2,{id:"license-and-trademarks",children:"License and Trademarks"}),"\n",(0,i.jsxs)(n.p,{children:["Licensed under the Apache License, Version 2.0: ",(0,i.jsx)(n.a,{href:"http://www.apache.org/licenses/LICENSE-2.0",children:"http://www.apache.org/licenses/LICENSE-2.0"})]}),"\n",(0,i.jsx)(n.p,{children:"Apache OpenDAL, OpenDAL, and Apache are either registered trademarks or trademarks of the Apache Software Foundation."})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}const d={title:"Ruby"},p=void 0,c={},h=[{value:"Get started",id:"get-started",level:2},{value:"Installation",id:"installation",level:3},{value:"Examples",id:"examples",level:3},{value:"File operations with an in-memory storage",id:"file-operations-with-an-in-memory-storage",level:4},{value:"A S3 operator",id:"a-s3-operator",level:4},{value:"Use middleware",id:"use-middleware",level:4},{value:"Documentation",id:"documentation",level:2},{value:"Development",id:"development",level:2},{value:"License and Trademarks",id:"license-and-trademarks",level:2}];function u(e){return(0,i.jsx)(l.A,{basePath:"bindings/ruby/",children:(0,i.jsx)(o,{components:{h1:"h2"}})})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u()}},8131:(e,n,s)=>{s.d(n,{A:()=>r});var t=s(6363),i=s(7259);function r({children:e,owner:n="apache",repo:s="opendal",branch:r="main",basePath:l="",components:a={}}){const o=e=>{const t=e.replace(/^\.\//,"");return`https://github.com/${n}/${s}/blob/${r}/${l}${t}`},d={...a,a:e=>{const{href:n,...s}=e;return n&&n.startsWith("./")?(0,i.jsx)("a",{...s,href:o(n)}):(0,i.jsx)("a",{...e})},p:e=>{const{children:n}=e;if("string"==typeof n){const e=/\[(.*?)\]:\s*(\.\/[^\s]+)/g;if(e.test(n)){const s=n.replace(e,(e,n,s)=>`[${n}]: ${o(s)}`);return(0,i.jsx)("p",{children:s})}}return(0,i.jsx)("p",{...e})}};return"string"==typeof e?(e=>{if("string"!=typeof e)return e;let n=e.replace(/\[(.*?)\]\((\.\/[^)]+)\)/g,(e,n,s)=>`[${n}](${o(s)})`);return n=n.replace(/\[(.*?)\]:\s*(\.\/[^\s]+)/g,(e,n,s)=>`[${n}]: ${o(s)}`),n})(e):t.isValidElement(e)?t.cloneElement(e,{components:{...e.props.components||{},...d}}):e}},9087:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var t=s(6363);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);