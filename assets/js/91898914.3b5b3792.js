"use strict";(self.webpackChunkopendal_website=self.webpackChunkopendal_website||[]).push([[3926],{383:(e,t,n)=>{n.d(t,{A:()=>s});var r=n(6672),a=n(3420);function s({children:e,owner:t="apache",repo:n="opendal",branch:s="main",basePath:i="",components:o={}}){const c=e=>{const r=e.replace(/^\.\//,"");return`https://github.com/${t}/${n}/blob/${s}/${i}${r}`},l={...o,a:e=>{const{href:t,...n}=e;return t&&t.startsWith("./")?(0,a.jsx)("a",{...n,href:c(t)}):(0,a.jsx)("a",{...e})},p:e=>{const{children:t}=e;if("string"==typeof t){const e=/\[(.*?)\]:\s*(\.\/[^\s]+)/g;if(e.test(t)){const n=t.replace(e,(e,t,n)=>`[${t}]: ${c(n)}`);return(0,a.jsx)("p",{children:n})}}return(0,a.jsx)("p",{...e})}};return"string"==typeof e?(e=>{if("string"!=typeof e)return e;let t=e.replace(/\[(.*?)\]\((\.\/[^)]+)\)/g,(e,t,n)=>`[${t}](${c(n)})`);return t=t.replace(/\[(.*?)\]:\s*(\.\/[^\s]+)/g,(e,t,n)=>`[${t}]: ${c(n)}`),t})(e):r.isValidElement(e)?r.cloneElement(e,{components:{...e.props.components||{},...l}}):e}},4661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"integrations/parquet","title":"Parquet","description":"","source":"@site/docs/30-integrations/parquet.mdx","sourceDirName":"30-integrations","slug":"/integrations/parquet","permalink":"/integrations/parquet","draft":false,"unlisted":false,"editUrl":"https://github.com/apache/opendal/tree/main/website/docs/30-integrations/parquet.mdx","tags":[],"version":"current","lastUpdatedBy":"Xuanwo","lastUpdatedAt":1741601725000,"frontMatter":{"title":"Parquet"},"sidebar":"docs","previous":{"title":"Object Store","permalink":"/integrations/object_store"},"next":{"title":"Spring","permalink":"/integrations/spring"}}');var a=n(3420),s=n(7251),i=n(383);function o(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"apache-opendal-parquet-integration",children:"Apache OpenDAL\u2122 parquet integration"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://github.com/apache/opendal/actions?query=branch%3Amain",children:(0,a.jsx)(t.img,{src:"/img/external/038db5f95e5f731e54b781037836d4a3.svg",alt:"Build Status"})})," ",(0,a.jsx)(t.a,{href:"https://crates.io/crates/parquet_opendal",children:(0,a.jsx)(t.img,{src:"/img/external/9438f0541b4c423401b7a1ad6dc4c99f.svg",alt:"Latest Version"})})," ",(0,a.jsx)(t.a,{href:"https://crates.io/crates/parquet_opendal",children:(0,a.jsx)(t.img,{src:"/img/external/07a037f44f92dc589d8e57cc77acb9e5.svg",alt:"Crate Downloads"})})," ",(0,a.jsx)(t.a,{href:"https://opendal.apache.org/discord",children:(0,a.jsx)(t.img,{src:"/img/external/6564632a3de5ae36e76129dad4c34d7c.svg",alt:"chat"})})]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"parquet_opendal"})," provides ",(0,a.jsx)(t.a,{href:"https://crates.io/crates/parquet",children:(0,a.jsx)(t.code,{children:"parquet"})})," efficient IO utilities."]}),"\n",(0,a.jsx)(t.h2,{id:"useful-links",children:"Useful Links"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Documentation: ",(0,a.jsx)(t.a,{href:"https://docs.rs/parquet_opendal/",children:"release"})," | ",(0,a.jsx)(t.a,{href:"https://opendal.apache.org/docs/object-store-opendal/parquet_opendal/",children:"dev"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(t.p,{children:["Add the following dependencies to your ",(0,a.jsx)(t.code,{children:"Cargo.toml"})," with correct version:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-toml",children:'[dependencies]\nparquet_opendal = "0.0.1"\nopendal = { version = "0.48.0", features = ["services-s3"] }\n'})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-rust",children:'use std::sync::Arc;\n\nuse arrow::array::{ArrayRef, Int64Array, RecordBatch};\n\nuse futures::StreamExt;\nuse opendal::{services::S3Config, Operator};\nuse parquet::arrow::{AsyncArrowWriter, ParquetRecordBatchStreamBuilder};\nuse parquet_opendal::{AsyncReader, AsyncWriter};\n\n#[tokio::main]\nasync fn main() {\n    let mut cfg = S3Config::default();\n    cfg.access_key_id = Some("my_access_key".to_string());\n    cfg.secret_access_key = Some("my_secret_key".to_string());\n    cfg.endpoint = Some("my_endpoint".to_string());\n    cfg.region = Some("my_region".to_string());\n    cfg.bucket = "my_bucket".to_string();\n\n    // Create a new operator\n    let operator = Operator::from_config(cfg).unwrap().finish();\n    let path = "/path/to/file.parquet";\n\n    // Create an async writer\n    let writer = AsyncWriter::new(\n        operator\n            .writer_with(path)\n            .chunk(32 * 1024 * 1024)\n            .concurrent(8)\n            .await\n            .unwrap(),\n    );\n\n    let col = Arc::new(Int64Array::from_iter_values([1, 2, 3])) as ArrayRef;\n    let to_write = RecordBatch::try_from_iter([("col", col)]).unwrap();\n    let mut writer = AsyncArrowWriter::try_new(writer, to_write.schema(), None).unwrap();\n    writer.write(&to_write).await.unwrap();\n    writer.close().await.unwrap();\n\n    /// `gap(512 * 1024)` - Sets the maximum gap size (in bytes) to merge small byte ranges\n    ///   to 512 KB.\n    /// `chunk(16 * 1024 * 1024)` - Sets the chunk size (in bytes) for reading data to 16 MB.\n    /// `concurrent(16)` - Sets the number of concurrent fetch operations to 16.\n    let reader = operator\n        .reader_with(path)\n        .gap(512 * 1024)\n        .chunk(16 * 1024 * 1024)\n        .concurrent(16)\n        .await\n        .unwrap();\n\n    let content_len = operator.stat(path).await.unwrap().content_length();\n    // `with_prefetch_footer_size(512 * 1024)` - Sets the prefetch footer size to 512 KB.\n    let reader = AsyncReader::new(reader, content_len).with_prefetch_footer_size(512 * 1024);\n    let mut stream = ParquetRecordBatchStreamBuilder::new(reader)\n        .await\n        .unwrap()\n        .build()\n        .unwrap();\n    let read = stream.next().await.unwrap().unwrap();\n    assert_eq!(to_write, read);\n}\n'})}),"\n",(0,a.jsx)(t.h2,{id:"branding",children:"Branding"}),"\n",(0,a.jsxs)(t.p,{children:["The first and most prominent mentions must use the full form: ",(0,a.jsx)(t.strong,{children:"Apache OpenDAL\u2122"})," of the name for any individual usage (webpage, handout, slides, etc.) Depending on the context and writing style, you should use the full form of the name sufficiently often to ensure that readers clearly understand the association of both the OpenDAL project and the OpenDAL software product to the ASF as the parent organization."]}),"\n",(0,a.jsxs)(t.p,{children:["For more details, see the ",(0,a.jsx)(t.a,{href:"https://www.apache.org/foundation/marks/guide",children:"Apache Product Name Usage Guide"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"license-and-trademarks",children:"License and Trademarks"}),"\n",(0,a.jsxs)(t.p,{children:["Licensed under the Apache License, Version 2.0: ",(0,a.jsx)(t.a,{href:"http://www.apache.org/licenses/LICENSE-2.0",children:"http://www.apache.org/licenses/LICENSE-2.0"})]}),"\n",(0,a.jsx)(t.p,{children:"Apache OpenDAL, OpenDAL, and Apache are either registered trademarks or trademarks of the Apache Software Foundation."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}const l={title:"Parquet"},d=void 0,p={},h=[{value:"Useful Links",id:"useful-links",level:2},{value:"Examples",id:"examples",level:2},{value:"Branding",id:"branding",level:2},{value:"License and Trademarks",id:"license-and-trademarks",level:2}];function u(e){return(0,a.jsx)(i.A,{basePath:"integrations/parquet/",children:(0,a.jsx)(c,{components:{h1:"h2"}})})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u()}},7251:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6672);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);