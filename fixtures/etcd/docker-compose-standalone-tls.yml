# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

services:
  etcd:
    image: gcr.io/etcd-development/etcd:v3.6.4
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - ./ca.pem:/certs/ca.pem
      - ./server.pem:/certs/server.pem
      - ./server-key.pem:/certs/server-key.pem
      - ./client-key.pem:/certs/client-key.pem
      - ./client.pem:/certs/client.pem
    environment:
      ETCD_NAME: etcd
      ETCD_ROOT_PASSWORD: opendal
      ETCD_LISTEN_CLIENT_URLS: https://0.0.0.0:2379
      ETCD_ADVERTISE_CLIENT_URLS: https://etcd:2379
      ETCD_MAX_REQUEST_BYTES: 10485760
      ETCD_TRUSTED_CA_FILE: /certs/ca.pem
      ETCD_KEY_FILE: /certs/server-key.pem
      ETCD_CERT_FILE: /certs/server.pem
      ETCDCTL_API: "3"
      ETCDCTL_ENDPOINTS: https://127.0.0.1:2379
      ETCDCTL_CACERT: /certs/ca.pem
      ETCDCTL_CERT: /certs/client.pem
      ETCDCTL_KEY: /certs/client-key.pem
    command: >-
      sh -c '
        set -euo pipefail
        etcd \
          --name "${ETCD_NAME}" \
          --listen-client-urls "${ETCD_LISTEN_CLIENT_URLS}" \
          --advertise-client-urls "${ETCD_ADVERTISE_CLIENT_URLS}" \
          --max-request-bytes "${ETCD_MAX_REQUEST_BYTES}" \
          --client-cert-auth=true \
          --trusted-ca-file="${ETCD_TRUSTED_CA_FILE}" \
          --cert-file="${ETCD_CERT_FILE}" \
          --key-file="${ETCD_KEY_FILE}" &
        pid=$!
        for i in $(seq 1 60); do
          if etcdctl endpoint health; then break; fi
          sleep 1
        done
        etcdctl user add root --interactive=false --password "${ETCD_ROOT_PASSWORD}" || true
        etcdctl user grant-role root root || true
        etcdctl auth enable || true
        wait "$pid"
      '
